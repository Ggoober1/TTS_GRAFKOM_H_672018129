#include <iostream>
#include <GL/freeglut.h>


	void display() {
		glClear(GL_COLOR_BUFFER_BIT);
		//Pertama
		for (float x = 0; x <= 500; x = x + 80) {
			float y = 0;
				float delta_x = x;
				glBegin(GL_QUADS); //1
				glVertex2f(0.0, 55.0);
				glVertex2f(0.0, 100.0);
				glVertex2f(499.0, 100.0);
				glVertex2f(499.0, 55.0);
				glEnd();
				glFlush();

				glBegin(GL_LINE_LOOP);
				glColor3f(1.0, 0.0, 0.0);
				glVertex2f(x + 10, y + 0);
				glVertex2f(x + 10, y + 55);
				glVertex2f(x + 60, y + 55);
				glVertex2f(x + 60, y + 30);
				glVertex2f(x + 50, y + 30);
				glVertex2f(x + 50, y + 45);
				glVertex2f(x + 20, y + 45);
				glVertex2f(x + 20, y + 0);
				glVertex2f(x + 10, y + 0);
				glEnd();
				x = +delta_x;
		}
		glFlush();
	

	for (float x = 0; x <= 500; x = x + 80) {
		float y = 0;
		float delta_x = x;
		glBegin(GL_LINE_LOOP);
		glVertex2f(x + 30, y + 10);
		glVertex2f(x + 80, y + 10);
		glVertex2f(x + 80, y + 55);
		glVertex2f(x + 70, y + 55);
		glVertex2f(x + 70, y + 20);
		glVertex2f(x + 40, y + 20);
		glVertex2f(x + 40, y + 35);
		glVertex2f(x + 30, y + 35);
		glVertex2f(x + 30, y + 10);
		glEnd();
		x = +delta_x;
	}
	glFlush();
	
	//kedua
	for (float x = 0; x <= 500; x = x + 120) {
		float y = 0;
		float delta_x = x;
		glBegin(GL_LINE_STRIP);
		glVertex2f(x + 5, y + 110);
		glVertex2f(x + 5, y + 140);
		glVertex2f(x + 45, y + 140);
		glVertex2f(x + 45, y + 100);
		glVertex2f(x + 35, y + 100);
		glVertex2f(x + 35, y + 130);
		glVertex2f(x + 15, y + 130);
		glVertex2f(x + 15, y + 120);
		glVertex2f(x + 25, y + 120);
		glVertex2f(x + 25, y + 110);
		glVertex2f(x + 5, y + 110);
		glEnd();
		x = +delta_x;
	}
	glFlush();

	for (float x = 0; x <= 500; x = x + 120) {
		float y = 0;
		float delta_x = x;
		glBegin(GL_LINE_STRIP);
		glVertex2f(x + 55, y + 110);
		glVertex2f(x + 95, y + 110);
		glVertex2f(x + 95, y + 140);
		glVertex2f(x + 75, y + 140);
		glVertex2f(x + 75, y + 130);
		glVertex2f(x + 85, y + 130);
		glVertex2f(x + 85, y + 120);
		glVertex2f(x + 65, y + 120);
		glVertex2f(x + 65, y + 150);
		glVertex2f(x + 55, y + 150);
		glVertex2f(x + 55, y + 110);
		glEnd();
		x = +delta_x;
	}
	glFlush();

	for (float x = 0; x <= 500; x = x + 120) {
		float y = 0;
		float delta_x = x;
		glBegin(GL_LINE_STRIP);
		glVertex2f(x + 105, y + 100);
		glVertex2f(x + 105, y + 150);
		glVertex2f(x + 115, y + 150);
		glVertex2f(x + 115, y + 100);
		glVertex2f(x + 105, y + 100);

		glEnd();
		x = +delta_x;
	}
	glFlush();

	//Ketiga
	for (float x = 0; x <= 500; x = x + 80) {
		float y = 0;
		float delta_x = x;
		glBegin(GL_QUADS);
		glVertex2f(x + 5, y + 185);
		glVertex2f(x + 5, y + 215);
		glVertex2f(x + 15, y + 215);
		glVertex2f(x + 15, y + 185);
		glEnd();

		glBegin(GL_QUADS);
		glVertex2f(x + 5, y + 215);
		glVertex2f(x + 5, y + 225);
		glVertex2f(x + 55, y + 225);
		glVertex2f(x + 55, y + 215);
		glEnd();

		glBegin(GL_QUADS);
		glVertex2f(x + 25, y + 195);
		glVertex2f(x + 25, y + 205);
		glVertex2f(x + 65, y + 205);
		glVertex2f(x + 65, y + 195);
		glEnd();

		glBegin(GL_QUADS);
		glVertex2f(x + 65, y + 195);
		glVertex2f(x + 65, y + 235);
		glVertex2f(x + 75, y + 235);
		glVertex2f(x + 75, y + 195);
		glEnd();
		x = +delta_x;
	}
	glFlush();

	//Keempat
	for (float x = 0; x <= 500; x = x + 60) {
		float y = 0;
		float delta_x = x;
		glBegin(GL_POLYGON);
		glVertex2f(x + 5, y + 270);
		glVertex2f(x + 5, y + 300);
		glVertex2f(x + 15, y + 300);
		glVertex2f(x + 15, y + 270);
		glEnd();

		glBegin(GL_POLYGON);
		glVertex2f(x + 5, y + 300);
		glVertex2f(x + 5, y + 310);
		glVertex2f(x + 35, y + 310);
		glVertex2f(x + 35, y + 300);
		glEnd();

		glBegin(GL_POLYGON);
		glVertex2f(x + 25, y + 280);
		glVertex2f(x + 25, y + 290);
		glVertex2f(x + 45, y + 290);
		glVertex2f(x + 45, y + 280);
		glEnd();

		glBegin(GL_POLYGON);
		glVertex2f(x + 45, y + 280);
		glVertex2f(x + 45, y + 320);
		glVertex2f(x + 55, y + 320);
		glVertex2f(x + 55, y + 280);
		glEnd();
		x = +delta_x;
	}
	glFlush();
}

void init() {
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glColor3f(0.2, 0.1, 0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glLineWidth(1.0);
	gluOrtho2D(0.0, 499.0, 0.0, 499.0);
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(500, 500);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("TTS GrafKom");
	glutDisplayFunc(display);

	init();
	glutMainLoop();

	return 0;
}